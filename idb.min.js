/* tiny idb-keyval-like helper for images */
window.ltcIDB = (function(){
  const DB_NAME='ltc-db', STORE='images';
  let dbp=null;
  function open(){
    if(dbp) return dbp;
    dbp=new Promise((res,rej)=>{
      const req=indexedDB.open(DB_NAME,1);
      req.onupgradeneeded=()=>{ req.result.createObjectStore(STORE); };
      req.onsuccess=()=>res(req.result);
      req.onerror=()=>rej(req.error);
    });
    return dbp;
  }
  async function get(key){
    const db=await open();
    return new Promise((res,rej)=>{
      const tx=db.transaction(STORE,'readonly');
      const store=tx.objectStore(STORE);
      const rq=store.get(key);
      rq.onsuccess=()=>res(rq.result);
      rq.onerror=()=>rej(rq.error);
    });
  }
  async function set(key,val){
    const db=await open();
    return new Promise((res,rej)=>{
      const tx=db.transaction(STORE,'readwrite');
      const store=tx.objectStore(STORE);
      const rq=store.put(val,key);
      rq.onsuccess=()=>res();
      rq.onerror=()=>rej(rq.error);
    });
  }
  async function keys(){
    const db=await open();
    return new Promise((res,rej)=>{
      const tx=db.transaction(STORE,'readonly');
      const store=tx.objectStore(STORE);
      const rq=store.getAllKeys();
      rq.onsuccess=()=>res(rq.result || []);
      rq.onerror=()=>rej(rq.error);
    });
  }
  return {get,set,keys};
})();